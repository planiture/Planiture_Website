@page
@model Planiture_Website.Areas.Identity.Pages.Account.Manage.Live_Chat.AgentLoginModel
@{
    ViewData["Title"] = "Agent Login";
}


<body>
    <nav class="navbar navbar-expand-sm  navbar-fixed-top navbar-toggleable-sm navbar-dark mb-3">
        <div class="container">

            <a class="navbar-text" id="agent-panel" asp-area="Identity" asp-page="./Live Chat/AgentLogin">Agent Panel</a>
            <button class="navbar-toggler" type="button" data-toggle="collapse" data-target=".navbar-collapse" aria-controls="navbarSupportedContent"
                    aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="navbar-collapse collapse ">
                <ul class="navbar-nav flex-grow-1">
                    <li class="nav-item">
                        <a class="nav-link text-dark" href="#" id="show-real-time-visits">Show Real Time Visits</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link text-dark" href="#" id="show-internal-chat">Internal Agent Chat <span class="badge">...</span></a>
                    </li>
                </ul>
                <p class="navbar-text navbar-right">
                    Logged in as <a href="#" id="change-status" class="navbar-link"></a>
                </p>
            </div>
        </div>
    </nav>
    <div class="container-fluid">
        <div id="chat-content">
            <div id="login">
                <h2>Log In to Start Accepting Chat Requests</h2>
                <div id="login-alerts"></div>
                <form method="post">
                    <fieldset>
                        <legend>Enter your agent name and password</legend>
                        <p>
                            <label>Agent Name</label>
                            <input required id="login-name" asp-for="Input.username" type="text" class="form-control" placeholder="agent name">
                        </p>
                        <p>
                            <label>Agent Password</label>
                            <input required id="login-pass" asp-for="Input.password" class="form-control" type="password">
                        </p>
                        <br />
                        <button id="login-btn" type="submit" class="btn btn-primary btn-medium">Start accepting chat </button>
                    </fieldset>
                </form>
            </div>
            <div id="agent-chat">

                <div id="real-time-visits">
                    <h2>Real time visits</h2>
                    <table id="current-visits" class="table table-striped table-bordered">
                        <thead>
                            <tr>
                                <th>Requested on</th>
                                <th>Page</th>
                                <th>Referrer</th>
                                <th>City</th>
                                <th>Country</th>
                                <th>In Chat</th>
                                <th>Invite</th>
                            </tr>
                        </thead>
                        <tbody></tbody>
                    </table>
                </div>
                <div id="internalchat">
                    <div id="all-chatbox">
                        <div id="chatmsgsinternal" class="chat-msgs"></div>
                        <ul id="discussion"></ul>
                    </div>
                    <div id="chat-controls" class="row">
                        <div class="col-md-10">
                            <input id="post-msg" type="text" class="form-control" placeholder="Enter your text here. Enter /list for a list of available commands" />
                        </div>
                        <div class="col-md-2">
                            <button id="post-btn" class="btn btn-primary">Send</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</body>

<script src="~/lib/signalr/dist/browser/signalr.min.js"></script>

<script type="text/javascript">
    document.addEventListener('DOMContentLoaded', function () {
        document.getElementById("agent-chat").style.display = "none";
        document.getElementById("login").style.display = "block";

        //start the connection
        var connection = new signalR.HubConnectionBuilder()
            .withUrl('/chatHub')
            .build();
        var agent = {
            id: '',
            name: '',
            isOnline: false
        };

        


        connection.start().then(function () {
            document.getElementById("login-btn").addEventListener("click", function () {
                var user = document.getElementById("login-name").value;
                var password = document.getElementById("login-pass").value;

                // Call the Send method on the hub.
                connection.invoke("AgentConnect", user, password);

                // Clear text box and reset focus for next comment.
                message.value = '';
                message.focus();
                event.preventDefault();
            });
            
        })
            .catch(error =>
            {
                console.error(error.message);
            });

        

        connection.on("loginResult", function (status, id, name) {
            if (status) {
                agent.id = id;
                agent.name = name;
                agent.isOnline = true;
                console.log
                showStatus();
                document.getElementById("login").style.display = "none";
                document.getElementById("agent-chat").style.display = "none";

                showChat("rt");
            }
            else {
                var msg = id == "config" ? 
                    'No configuration file found. Please configure LCSK before using it' :
                    'No agent matches those credentials.';

            }
        });

        function showStatus() {
            if (agent.isOnline == true) {
                document.getElementById("change-status").innerText(agent.name + '' + 'set online');
            }
            else {
                document.getElementById("change-status").innerText(agent.name + '' + 'set offline');
            }
            //document.getElementById("change-status").innerText(agent.name + '' + (agent.isOnline ? 'set offline' : 'set online'));
        }
        function showChat(windowToShow) {
            document.getElementById("real-time-visits").style.display = "none";
            document.getElementById("all-chatbox").style.display = "none";
            document.getElementsByClassName("chat-msgs").style.display = "none";
            document.getElementById("chat-controls").style.display = "none";
            document.getElementById("login").style.display = "none";

            if (windowToShow == "rt") {
                document.getElementById("real-time-visits").style.display = "block";
            }
            else {
                document.getElementById("all-chatbox").style.display = "block";
                document.getElementsByClassName("chat-msgs").style.display = "block";
                document.getElementById("chat-controls").style.display = "block";
                document.getElementById("post-msg").focus();
            }
        }
    });
    
</script>

<style type="text/css">
    body {
        padding-top: 60px;
        padding-bottom: 40px;
    }

    .sidebar-nav {
        padding: 9px 0;
    }

    .chat-session {
        padding: 3px 3px 3px 3px;
        height: 65px;
        border-bottom: 1px solid #000;
        cursor: pointer;
    }

    .chat-session.active {
        background-color: lightgray;
        cursor: default;
    }
    .chat-msgs {
        height: 650px;
        padding: 3px 3px 3px 3px;
        border: 3px dashed lightgray;
        margin-bottom: 10px;
        overflow-y: auto;
    }

    .navbar-dark {
        background-color: darkgrey;
    }

    .navbar-text {
        color: black;
    }

    .badge {
        background-color: white;
        color: black;
    }

    #agent-panel {
        font-size: 24px;
    }
</style>